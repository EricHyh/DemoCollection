java基础
一、TCP协议（https://www.cnblogs.com/yjf512/p/5909031.html）
1.标志位（https://blog.csdn.net/ChenVast/article/details/77978367）
（1）URG（URGENT POINTER）：紧急指针
有紧急指针标记的数据，需优先处理
（2）ACK（ACKNOWLEDGEMENT）：确认标志位
ACK用于确认数据包的成功接收
（3）PSH（PUSH）：推送


（5）SYN：同步标志位
SYN全称位同步序列编号（Synchronize Sequence Numbers），发起TCP连接请求时，使用该标志位



1.TCP建立连接的流程：
（1）客户端向服务端发送一个包含SYN包，发起连接请求，相对序列号位0
（2）服务端收到SYN包，回复一个ACK包

2.TCP断开连接流程：


3.TCP滑动窗口
https://blog.csdn.net/wdscq1234/article/details/52444277

4.TCP重连机制



二、HTTP协议





三、java锁机制
1.synchronized
2.Lock
3.公平锁与非公平锁



四、ArrayList
1.扩容机制




五、HashMap
1.初始size计算
位运算+或运算

2.hash算法
(1)hash = hash ^ (hash >>> 16)低位高位混合，增大地位随机性
(2)index = hash & (length - 1)，length = 1 << n

3.扩容
(1)初始容量 2<<<4
(2)默认装载因子0.75

4.链表转红黑树




六、TreeMap



七、java内存模型（https://zhuanlan.zhihu.com/p/34362413）
1.主内存（Main Memory）
所有的变量都存储在主内存中

2.工作内存（Working Memory）
每条线程都有独立的工作内存，线程的工作内存中保存了被该线程使用到的变量的主内存副本拷贝，线程对变量的所有操作（读取、赋值等）都必须在工作内存中进行，
而不能直接读写主内存中的变量。不同的线程之间也无法直接访问对方工作内存中的变量，线程间变量值的传递均需要通过主内存来完成。

3.先行发生原则
（1）程序次序规则（Program Order Rule）：在一个线程内，按照程序代码顺序，书写在前面的操作先行发生于书写在后面的操作。准确地说，应该是控制流顺序而不是程序代码顺序，因为要考虑分支、循环等结构。
（2）管程锁定规则（Monitor Lock Rule）：一个unlock操作先行发生于后面对同一个锁的lock操作。这里必须强调的是同一个锁，而“后面”是指时间上的先后顺序。
（3）volatile变量规则（Volatile Variable Rule）：对一个volatile变量的写操作先行发生于后面对这个变量的读操作，这里的“后面”同样是指时间上的先后顺序。
（4）线程启动规则（Thread Start Rule）：Thread对象的start()方法先行发生于此线程的每一个动作。
（5）线程终止规则（Thread Termination Rule）：线程中的所有操作都先行发生于对此线程的终止检测，我们可以通过Thread.join()方法结束、Thread.isAlive（）的返回值等手段检测到线程已经终止执行。
（6）线程中断规则（Thread Interruption Rule）：对线程interrupt()方法的调用先行发生于被中断线程的代码检测到中断事件的发生，可以通过Thread.interrupted()方法检测到是否有中断发生。
（7）对象终结规则（Finalizer Rule）：一个对象的初始化完成（构造函数执行结束）先行发生于它的finalize()方法的开始。
（8）传递性（Transitivity）：如果操作A先行发生于操作B，操作B先行发生于操作C，那就可以得出操作A先行发生于操作C的结论。

七、volatile
volatile可以保证变量的可见性与有序性，不能保证变量操作的原子性


八、CAS（Compare-and-Swap）
1.实现步骤
（1）获取旧值
（2）比较旧值，若相同则替换，否则不操作
（3）循环上述操作，直至替换成功



九、synchronized
1.


十、ReentrantLock
1.

